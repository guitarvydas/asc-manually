(defmethod instantiate-template ((self hwsub))
  (setter-kind self "hwsub")
  (add-input-port self (make-instance 'input-port :tag "./i/xx"))
  (add-output-port self (make-instance 'output-port :tag "./o/yy"))
  (let ((c/1 (make-instance 'inner-456)))
    (instantiate-template c/1)
    (add-child c/1 (new-tag "./c/1") c/1))
  (add-connection self (make-instance 'connection :tag "./i/xx" :action (lambda (m) (send-downward self "./c/1/i/r" m))))
  (add-connection self (make-instance 'connection :tag "./c/1/o/s" :action (lambda (m) (send-upward self "./o/yy" m)))))

(defmethod instantiate-template ((self inner-456))
  (add-input-port self (make-instance 'input-port :tag "./i/r"))
  (add-output-port self (make-instance 'output-port :tag "./o/s")))

(defun make-hwsub () 
  (let 