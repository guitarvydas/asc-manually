(def (rid hw123/c/hwapp/c/hwsub c hwhello))
(input (ref (rid hw123/c/hwapp/c/hwsub c hwhello)) (def (rid hw123/c/hwapp/c/hwsub/c/hwhello i in)))
(output (ref (rid hw123/c/hwapp/c/hwsub c hwhello)) (def (rid hw123/c/hwapp/c/hwsub/c/hwhello o out)))
(text (ref (rid hw123/c/hwapp/c/hwsub c hwhello)) (def (rid hw123/c/hwapp/c/hwsub/c/hwhello n code)) "hello")
(connection (ref (rid hw123/c/hwapp/c/hwsub c hwhello)) (def (rid hw123/c/hwapp/c/hwsub/c/hwhello x 1)) (on (ref (rid hw123/c/hwapp/c/hwsub/c/hwhello i in)) (call (ref (rid hw123/c/hwapp/c/hwsub/c/hwhello n code)))(send 'upward (ref (rid hw123/c/hwapp/c/hwsub/c/hwhello o out)) (tospop))))
(def (rid hw123/c/hwapp/c/hwsub c _nonamekind))
(input (ref (rid hw123/c/hwapp/c/hwsub c _nonamekind)) (def (rid hw123/c/hwapp/c/hwsub/c/_nonamekind i C)))
(output (ref (rid hw123/c/hwapp/c/hwsub c _nonamekind)) (def (rid hw123/c/hwapp/c/hwsub/c/_nonamekind o D)))

(def (rid hw123/c/hwapp c hwsub))
(input (ref (rid hw123/c/hwapp c hwsub)) (def (rid hw123/c/hwapp/c/hwsub i A)))
(output (ref (rid hw123/c/hwapp c hwsub)) (def (rid hw123/c/hwapp/c/hwsub o B)))
(contains (ref (rid hw123/c/hwapp c hwsub)) (ref (rid hsub c hole)) (clone (ref (rid hw123/c/hwapp/c/hwsub c _nonamekind))))
(connection (ref (rid hw123/c/hwapp c hwsub)) (def (rid hw123/c/hwapp/c/hwsub x 1)) (on (ref (rid hw123/c/hwapp/c/hwsub i in)) (send 'downward (ref (rid hw123/c/hwapp/c/hwsub/c/hole i C)) m)))
(connection (ref (rid hw123/c/hwapp c hwsub)) (def (rid hw123/c/hwapp/c/hwsub x 2)) (on (ref (rid hw123/c/hwapp/c/hwsub/c/hole o D)) (send 'upward (ref (rid hw123/c/hwapp/c/hwsub o B)) m)))
(def (rid hw123/c/hwapp c _nonamekind))
(input (ref (rid hw123/c/hwapp c _nonamekind)) (def (rid hw123/c/hwapp/c/_nonamekind i in)))
(output (ref (rid hw123/c/hwapp c _nonamekind)) (def (rid hw123/c/hwapp/c/_nonamekind o out)))

(def (rid hw123 c hwapp))
(input (ref (rid hw123 c hwapp)) (def (rid hw123/c/hwapp i in)))
(output (ref (rid hw123 c hwapp)) (def (rid hw123/c/hwapp o out)))
(contains (ref (rid hw123 c hwapp)) (ref (rid hw123/c/hwapp c inner)) (clone (ref (rid hw123/c/hwapp c _nonamekind))))
(connection (ref (rid hw123 c hwapp)) (def (rid hw123/c/hwapp x 1)) (on (ref (rid hw123/c/hwapp i in)) (send 'downward (ref (rid hw123/c/hwapp/c/inner i in)) m)))
(connection (ref (rid hw123 c hwapp)) (def (rid hw123/c/hwapp x 2)) (on (ref (rid hw123/c/hwapp/c/inner o out)) (send 'upward (ref (rid hw123/c/hwapp o out)) m)))


