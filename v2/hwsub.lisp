(defun new-hwsub () 
  (let ((hwsub (make-instance 'asc-template :kind "hwsub")))
    (add-input-port hwsub (make-instance 'input-port :tag "A"))
    (add-output-port hwsub (make-instance 'output-port :tag "B"))
    (let ((hwsub/c/hole (make-instance 'asc-hwsub :kind "hwsub/c/hole")))
      (add-input-port hwsub/c/hole (make-instance 'input-port :tag "hole/C"))
      (add-output-port hwsub/c/hole (make-instance 'output-port :tag "hole/D"))
      (add-child hwsub "hwsub/c/hole" hwsub/c/hole)
    (add-connection hwsub (new-connection "x/1" "A" (lambda (self m) (send-downward self "hole/C" m))))
    (add-connection hwsub (new-connection "x/2" "hole/D" (lambda (self m) (send-upward self "B" m))))
    hwsub))
  
