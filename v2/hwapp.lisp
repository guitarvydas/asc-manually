(defun new-hwapp ()
  (let ((app (make-instance 'asc-app :kind "app")))
    (add-input-port app (make-instance 'input-port :tag "in"))
    (add-output-port app (make-instance 'output-port :tag "out"))
    (let ((app/c/inner (make-instance 'asc-app :kind "app/inner")))
      (add-input-port app/c/inner (make-instance 'input-port :tag "inner/in"))
      (add-output-port app/c/inner (make-instance 'output-port :tag "inner/out"))
      (add-child app "app/c/inner" app/c/inner))
    (add-connection app (new-connection "in" (lambda (self m) (send-downward self "inner/in" m))))
    (add-connection app (new-connection "inner/out" (lambda (self m) (send-upward self "out" m))))
    app))
