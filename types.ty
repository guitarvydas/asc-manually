component {
    kind : name
    inputs : namespace [input]
    outputs : namespace [output]

    not instantiable
}

name = kind
composite {
    include component
    children : namespace [component]
    connections : namespace [connection]  
}compositeRunnable {
  include composite
  include runnable
  children: [nameChildPair]
}

nameChildPair { name component }
connection {
  name
  sender
  receiver
}

sender { connectionComponent tag }
receiver { connectionComponent tag }
connectionComponent = component
dispatcher {
  all : [component]
}

input = name
leaf {
    include component
}

leafRunnable {
  include leaf
  include runnable
}
message { tag data }

data = any
name = elsewhere
namespace = [name]
output = name
queue = elsewhere
runnable {
  inputQueue: queue
  outputQueue: queue
}
tag = elsewhere
